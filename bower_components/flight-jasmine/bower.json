{
  "name": "flight-jasmine",
  "version": "1.0.0",
  "main": "lib/flight-jasmine.js",
  "ignore": [
    "example",
    "CONTRIBUTING.md",
    ".travis.yml"
  ],
  "gitHead": "277f52713ebc7b9e3155f4b3e4bfbc587930ea96",
  "readme": "flight-jasmine [![Build Status](https://travis-ci.org/twitter/flight-jasmine.png?branch=master)](http://travis-ci.org/twitter/flight-jasmine)\n==============\n\nExtensions to the Jasmine test framework for use with [Flight](https://github.com/twitter/flight)\n\n# Getting started\n\nCopy [lib/flight-jasmine.js](lib/flight-jasmine.js) in to your app and load in test runner.\n\n## Components\n```javascript\ndescribeComponent('path/to/component', function () {\n  beforeEach(setupComponent);\n\n  it('should do x', function () {\n    // a component instance is now accessible as this.component\n    // the component root node is attached to the DOM\n    // the component root node is also available as this.$node\n  });\n});\n```\n\n## Mixins\n```javascript\ndescribeMixin('path/to/mixin', function () {\n  // initialize the component and attach it to the DOM\n  beforeEach(setupComponent);\n\n  it('should do x', function () {\n    expect(this.component.doSomething()).toBe(expected);\n  });\n});\n```\n\n## Event spy\n```javascript\ndescribeComponent('data/twitter_profile', function () {\n  beforeEach(setupComponent);\n\n  describe('listens for uiNeedsTwitterUserId', function () {\n\n    // was the event triggered?\n    it('and triggers dataTwitterUserId', function () {\n      var eventSpy = spyOnEvent(document, 'dataTwitterProfile');\n      $(document).trigger('uiNeedsTwitterUserId', {\n        screen_name: 'tbrd'\n      });\n    expect(eventSpy).toHaveBeenTriggeredOn(document);\n    });\n\n    // is the user id correct?\n    it('and has correct id', function () {\n      var eventSpy = spyOnEvent(document, 'dataTwitterUserId');\n      $(document).trigger('uiNeedsTwitteruserId', {\n        screen_name: 'tbrd'\n      });\n      expect(eventSpy.mostRecentCall.data).toEqual({\n        screen_name: 'tbrd',\n        id: 4149861\n      });\n    });\n  });\n});\n```\n## setupComponent\n```javascript\nsetupComponent(optionalFixture, optionalOptions);\n```\nCalling setupComponent twice will create an instance, tear it down and create a new one.\n\n### HTML Fixtures\n```javascript\ndescribeComponent('ui/twitter_profile', function () {\n  // is the component attached to the fixture?\n  it('this.component.$node has class \"foo\"', function () {\n    setupComponent('<span class=\"foo\">Test</span>');\n    expect(this.component.$node).toHaveClass('foo');\n  });\n});\n```\n### Component Options\n```javascript\ndescribeComponent('data/twitter_profile', function () {\n  // is the option set correctly?\n  it('this.component.attr.baseUrl is set', function () {\n    setupComponent({\n      baseUrl: 'http://twitter.com/1.1/'\n    });\n  expect(this.component.attr.baseUrl).toBe('http://twitter.com/1.1/');\n  });\n});\n```\n# Teardown\n\nComponents are automatically torn down after each test.\n\n# Why flight-jasmine?\n\nFlight components are defined by their interface: the events they trigger and handle, and how they interact with the DOM. They are also highly independent, with no reliance on other components. These two factors allow them to be rigourously and exhaustively tested.\n\nHowever, Flight does not expose component instances so testing them can be tricky. Also, out-of-the-box Jasmine does not support testing of jQuery Events.\n\nflight-jasmine provides the developer with simple methods for setting up, exposing and tearing down component instances, and for testing whether expected events are triggered.\n\n\n## Contributing to this project\n\nAnyone and everyone is welcome to contribute. Please take a moment to\nreview the [guidelines for contributing](CONTRIBUTING.md).\n\n* [Bug reports](CONTRIBUTING.md#bugs)\n* [Feature requests](CONTRIBUTING.md#features)\n* [Pull requests](CONTRIBUTING.md#pull-requests)\n\n## Authors\n\n+ [@tbrd](http://github.com/tbrd)\n\n## Thanks\n\n+ [@esbie](http://github.com/esbie) and [@skilldrick](http://github.com/skilldrick) for creating the original describeComponent & describeMixin methods\n+ [@necolas] (http://github.com/necolas) for CONTRIBUTING.md\n\n## License\nCopyright 2013 Twitter, Inc and other contributors.\n\nLicensed under the MIT License\n",
  "readmeFilename": "README.md",
  "_id": "flight-jasmine@1.0.0",
  "description": "flight-jasmine [![Build Status](https://travis-ci.org/twitter/flight-jasmine.png?branch=master)](http://travis-ci.org/twitter/flight-jasmine) ==============",
  "repository": {
    "type": "git",
    "url": "git://github.com/twitter/flight-jasmine.git"
  }
}